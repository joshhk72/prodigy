{"version":3,"sources":["./frontend/components/album_show/show.jsx","./frontend/components/album_show/show_container.js","./frontend/components/album_show/track_panel.jsx"],"names":["AlbumShow","props","state","done","openModal","bind","handleImageError","clearAlbums","fetchAlbum","match","params","albumId","then","setState","e","target","src","defaultImage","currentAlbum","undefined","image_url","banner_image_url","description","artist","title","tracks","bannerImage","heroStyle","backgroundImage","trackLis","map","track","id","descParagraphs","split","paragraph","i","name","loggedIn","React","Component","mapStateToProps","ownProps","Boolean","session","entities","albums","mapDispatchToProps","dispatch","modal","withRouter","connect","TrackPanel"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import React from 'react';\nimport ReactLoading from \"react-loading\";\nimport { Link } from 'react-router-dom';\nimport TrackPanel from './track_panel';\nimport defaultImage from 'assets/images/no_image.png';\n\nclass AlbumShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { done: false };\n    this.openModal = this.openModal.bind(this);\n    this.handleImageError = this.handleImageError.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.clearAlbums();\n    this.props.fetchAlbum(this.props.match.params.albumId).then(\n      () => this.setState({ done: true }),\n    );\n  }\n\n  handleImageError(e) {\n    e.target.src = defaultImage;\n  }\n\n  openModal() {\n    this.props.openModal('albumEdit');\n  }\n\n  render() {\n    if (!this.state.done) {\n      return <ReactLoading type={\"bars\"} color={\"white\"} />;\n    } else if (this.props.currentAlbum === undefined) {\n      return <div className=\"no-tracks-shown\"><h2>Error!</h2><p>The album you are looking for does not exist!</p></div>\n    };\n\n    const { image_url, banner_image_url, description, artist, title, tracks } = this.props.currentAlbum;\n\n    let bannerImage;\n    if (banner_image_url) {\n      bannerImage = banner_image_url;\n    } else if (image_url) {\n      bannerImage = image_url;\n    }\n\n    const heroStyle = {\n      backgroundImage: bannerImage ? `url(${bannerImage})` : \"\"\n    };\n\n    const trackLis = tracks.map(track => {\n      return <TrackPanel key={track.id} track={track} />;\n    });\n\n    let descParagraphs\n    if (description) descParagraphs = description.split(/\\r?\\n/).map((paragraph,i) => {\n      return <p key={500+i}>{paragraph}</p>\n    });\n\n    return (\n      <section className=\"album-show-page\">\n        <header id=\"album-show-hero\" style={heroStyle}>\n          <div id=\"album-show-hero-center\">\n            <div className=\"album-show-image-container\">\n              <div className=\"content\">\n                <img id=\"album-show-image\"\n                  onError={this.handleImageError}\n                  src={image_url || defaultImage}\n                />\n              </div>\n            </div>\n            <div className=\"album-show-header-info-container\">\n              <span>Album</span>\n              <h1>{title}</h1>\n              <h2>\n                <Link to={`/artists/${artist.id}`}>\n                  {artist.name}\n                </Link>\n              </h2>\n            </div>\n          </div>\n        </header>\n        <main>\n          <div className=\"album-show-main-col-1\">\n            { this.props.loggedIn && \n              <button onClick={() => this.props.openModal(\"albumEdit\")}>Edit Album</button> \n            }\n            <h2>{title} Tracklist</h2>\n            <ul>\n              {trackLis}\n            </ul>\n          </div>\n          <div className=\"album-show-main-col-2\">\n            { description && <div className=\"album-show-description\">\n              <h3>About {title}</h3>\n              {descParagraphs}\n          </div> }\n          </div>\n        </main>\n      </section>\n    )\n  }\n};\n\nexport default AlbumShow;","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AlbumShow from './show';\nimport { clearAlbums, fetchAlbum } from '../../actions/album_actions';\nimport { openModal } from '../../actions/modal_actions';\n\nconst mapStateToProps = (state, ownProps) => ({\n  loggedIn: Boolean(state.session.id),\n  currentAlbum: state.entities.albums[ownProps.match.params.albumId]\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAlbum: id => dispatch(fetchAlbum(id)),\n  clearAlbums: () => dispatch(clearAlbums()),\n  openModal: modal => dispatch(openModal(modal))\n});\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlbumShow));","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TrackPanel = props => {\n  const { name, id } = props.track;\n  return (\n    <li className=\"album-show-track-panel\">\n      <Link to={`/tracks/${id}`}>\n        {name}\n      </Link>\n    </li>\n  )\n};\n\nexport default TrackPanel;"],"sourceRoot":""}